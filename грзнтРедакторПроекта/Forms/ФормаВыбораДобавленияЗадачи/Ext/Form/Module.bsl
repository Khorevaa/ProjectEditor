#Область ФормаСобытия

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("НаименованиеЗадачи", ЗадачаПроектаНаименование);
	Параметры.Свойство("УИД", ЗадачаПроектаУИД);
	Параметры.Свойство("КодСДР", ЗадачаПроектаКодСДР);
	Параметры.Свойство("НомерСтрокиПроекта", ЗадачаПроектаНомерСтрокиПроекта);
	Параметры.Свойство("Проект", ЗадачаПроектаПроект);
	СформироватьДеревоЭкземпляровВерсийНаСервере();
	Элементы.ДеревоЭкземпляров.Видимость = Ложь;
	
	ПереноситьВЭкземпляры = Истина;
	ПереноситьДДС = Истина;
	ПереноситьДоходы = Истина;
	ПереноситьЗадачаВместеСПодчиненными = Истина;
	ПереноситьМатериалы = Истина;
	ПереноситьРасходы = Истина;
	ПереноситьСрокиИДлительность = Истина;
	ПереноситьТрудозатратыПоРесурсам = Истина;
	ПереноситьТрудозатратыПоРолям = Истина;
	ПереноситьКомментарии = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ВыборЗадачиПомещения" И ТипЗнч(Источник) = Тип("УправляемаяФорма") И Источник.ВладелецФормы = ЭтаФорма Тогда 
		СтандартнаяОбработка = Ложь;
		ЗадачаПроектаНаименованиеОбработкаВыбора(Элементы.ЗадачаПроектаНаименование, Параметр, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	ЭкземплярВерсии = ПолучитьРеквизитОбъекта(Проект, "грзнтРедактируемыйЭкземплярВерсии");
	СформироватьДеревоЭкземпляра();
КонецПроцедуры

&НаКлиенте
Процедура ЭкземплярВерсииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.грзнтЭкземплярыВерсийПланаПроекта.ФормаВыбора", Новый Структура("Проект, ТекущаяСтрока", Проект, ЭкземплярВерсии), Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЭкземплярВерсииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ЭкземплярВерсииПриИзменении(Элемент)
	СформироватьДеревоЭкземпляра();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПроектаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	КомандаВыбрать(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПереноситьВЭкземплярыПриИзменении(Элемент)
	Элементы.ДеревоЭкземпляров.Видимость = НЕ ПереноситьВЭкземпляры;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭкземпляровПометкаПриИзменении(Элемент)
	ТекущийЭлементДерева = Элементы.ДеревоЭкземпляров.ТекущиеДанные;
	Если ТекущийЭлементДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Для Каждого ПодчиненныйЭлементДерева ИЗ ТекущийЭлементДерева.ПолучитьЭлементы() Цикл
		ПодчиненныйЭлементДерева.Пометка = ТекущийЭлементДерева.Пометка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭкземпляровПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЭкземпляровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроектаНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗакрыватьПриЗакрытииОкнаВладельца", Истина);
	СтруктураПараметров.Вставить("ТекущийУИД", ЗадачаПроектаУИД);
	СтруктураПараметров.Вставить("ПредшественникУИД", ЗадачаПроектаУИД);
	СтруктураПараметров.Вставить("Проект", ЗадачаПроектаПроект);
	СтруктураПараметров.Вставить("ИмяФормыРедактирования", ВладелецФормы.ПолучитьИмяОбъектаНаКлиенте() + ".Форма.ФормаВыбораЗадачи");
	СтруктураПараметров.Вставить("ОперацияВыбора", "ВыборЗадачиПомещения");
	ОткрытьФорму(СтруктураПараметров.ИмяФормыРедактирования, СтруктураПараметров, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроектаНаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ЗадачаПроектаУИД = "";
	ЗадачаПроектаНомерСтрокиПроекта = 0;
	ЗадачаПроектаКодСДР = "";
	Если НЕ ПустаяСтрока(ВыбранноеЗначение) Тогда
		ЗадачаПроектаНаименование = "";
		ЗадачаПроектаУИД = ВыбранноеЗначение;
		
		СтрокаТаблицы = ВладелецФормы.тСоответствиеТаблицыУИД.Получить(ЗадачаПроектаУИД);
		Если СтрокаТаблицы <> Неопределено Тогда
			ВыбранноеЗначение = СтрокаТаблицы.НаименованиеЗадачи;
			ЗадачаПроектаНомерСтрокиПроекта = СтрокаТаблицы.НомерСтрокиПроекта;
			ЗадачаПроектаКодСДР = СтрокаТаблицы.КодСДР;
		КонецЕсли;
	КонецЕсли;
	ЗадачаПроектаНаименование = ВыбранноеЗначение;
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроектаНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	ЗадачаПроектаКодСДР = "";
	ЗадачаПроектаНаименование = "";
	ЗадачаПроектаНомерСтрокиПроекта = 0;
	ЗадачаПроектаУИД = "";
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	ТекущиеДанные = Элементы.ДеревоПроекта.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Задача", ТекущиеДанные.Задача);
	СтруктураВыбора.Вставить("УИД", ЗадачаПроектаУИД);
	СтруктураВыбора.Вставить("Проект", Проект);
	СтруктураВыбора.Вставить("ЭкземплярВерсии", ЭкземплярВерсии);
	
	СтруктураВыбора.Вставить("ПереноситьВЭкземпляры", ПереноситьВЭкземпляры);
	СтруктураВыбора.Вставить("ПереноситьДДС", ПереноситьДДС);
	СтруктураВыбора.Вставить("ПереноситьДоходы", ПереноситьДоходы);
	СтруктураВыбора.Вставить("ПереноситьЗадачаВместеСПодчиненными", ПереноситьЗадачаВместеСПодчиненными);
	СтруктураВыбора.Вставить("ПереноситьМатериалы", ПереноситьМатериалы);
	СтруктураВыбора.Вставить("ПереноситьРасходы", ПереноситьРасходы);
	СтруктураВыбора.Вставить("ПереноситьСрокиИДлительность", ПереноситьСрокиИДлительность);
	СтруктураВыбора.Вставить("ПереноситьТрудозатратыПоРесурсам", ПереноситьТрудозатратыПоРесурсам);
	СтруктураВыбора.Вставить("ПереноситьТрудозатратыПоРолям", ПереноситьТрудозатратыПоРолям);
	СтруктураВыбора.Вставить("ПереноситьКомментарии", ПереноситьКомментарии);
	
	МассивЭкземпляров = Новый Массив;
	Для Каждого ЭлементВидВерсии ИЗ ДеревоЭкземпляров.ПолучитьЭлементы() Цикл
		Для Каждого ЭлементЭкземпляр ИЗ ЭлементВидВерсии.ПолучитьЭлементы() Цикл
			Если ЭлементЭкземпляр.Пометка Тогда
				МассивЭкземпляров.Добавить(ЭлементЭкземпляр.ЭкземплярВерсии);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	СтруктураВыбора.Вставить("МассивЭкземпляров", МассивЭкземпляров);
	
	Оповестить("ВыборЗадачиДляДобавления", СтруктураВыбора, ЭтаФорма);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьУровень(Команда)
	Если Найти(ТекущийЭлемент.Имя, "КнопкаПоказатьУровень") = 0 Тогда
		Возврат;
	КонецЕсли;
	Уровень = Число(СтрЗаменить(ТекущийЭлемент.Имя, "КнопкаПоказатьУровень", ""));
	ПоказатьУровеньДерева(ДеревоПроекта, Уровень, 1);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьДерево(Команда)
	ТекущаяЗадача = Элементы.ДеревоПроекта.ТекущиеДанные.Задача;
	ТекущийИдентификатор = -1;
	СформироватьДеревоЭкземпляра();
	ТекущаяЗадача = ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка");
	Если ТекущийИдентификатор >= 0 Тогда
		Элементы.ДеревоПроекта.ТекущаяСтрока = ТекущийИдентификатор;
	КонецЕсли;
	ТекущийИдентификатор = -1;
	//СформироватьДеревоЭкземпляровВерсийНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчиститьЗадачу(Команда)
	ЗадачаПроектаКодСДР = "";
	ЗадачаПроектаНаименование = "";
	ЗадачаПроектаНомерСтрокиПроекта = 0;
	ЗадачаПроектаУИД = "";
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункции

&НаКлиенте
Процедура СформироватьДеревоЭкземпляра()
	СформироватьДеревоЭкземпляраНаСервере();
	ПоказатьУровеньДерева(ДеревоПроекта, 2, 1);
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоЭкземпляраНаСервере()
	ЗапросЭкземпляр = Новый Запрос;
	ЗапросЭкземпляр.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	грзнтСДРПроектов.Задача,
	|	СпрПроекты.грзнтПолноеНаименование КАК НаименованиеЗадачи,
	|	грзнтСДРПроектов.Родитель,
	|	грзнтСДРПроектов.КодСДР,
	|	грзнтСДРПроектов.НомерСтрокиПроекта КАК НомерСтрокиПроекта,
	|	ЕСТЬNULL(грзнтСрокиПроектов.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачала,
	|	ЕСТЬNULL(грзнтСрокиПроектов.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончания,
	|	ЕСТЬNULL(грзнтСрокиПроектов.Длительность, 0) КАК Длительность,
	|	ЕСТЬNULL(грзнтСрокиПроектов.ЕдиницаВремени, ЗНАЧЕНИЕ(Справочник.грзнтЕдиницыВремени.ПустаяСсылка)) КАК ЕдиницаВремени,
	|	грзнтВидыЭлементовПроекта.Картинка
	|ИЗ
	|	РегистрСведений.грзнтСДРПроектов КАК грзнтСДРПроектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.грзнтСрокиПроектов КАК грзнтСрокиПроектов
	|		ПО грзнтСДРПроектов.Задача = грзнтСрокиПроектов.Задача
	|			И грзнтСДРПроектов.ЭкземплярВерсии = грзнтСрокиПроектов.ЭкземплярВерсии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты КАК СпрПроекты
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.грзнтВидыЭлементовПроекта КАК грзнтВидыЭлементовПроекта
	|			ПО СпрПроекты.грзнтВидЭлемента = грзнтВидыЭлементовПроекта.Ссылка
	|		ПО грзнтСДРПроектов.Задача = СпрПроекты.Ссылка
	|ГДЕ
	|	грзнтСДРПроектов.ЭкземплярВерсии = &ЭкземплярВерсии
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиПроекта";
	ЗапросЭкземпляр.УстановитьПараметр("ЭкземплярВерсии", ЭкземплярВерсии);
	ТаблицаПроекта = ЗапросЭкземпляр.Выполнить().Выгрузить();
	ДеревоПроекта.ПолучитьЭлементы().Очистить();
	МаксимальныйУровень = СформироватьДеревоЭкземпляраРекурсивно(ТаблицаПроекта, Проект, ДеревоПроекта, 0);
	
	ПоказатьКнопкиКоличестваУровней(МаксимальныйУровень);
КонецПроцедуры

&НаСервере
Функция СформироватьДеревоЭкземпляраРекурсивно(ТаблицаПроекта, ТекущийРодитель, ТекущийЭлементДерева, ТекущийУровень);
	МаксимальныйУровень = ТекущийУровень;
	СтрокиПроекта = ТаблицаПроекта.НайтиСтроки(Новый Структура("Родитель", ТекущийРодитель));
	Для Каждого СтрокаПроекта ИЗ СтрокиПроекта Цикл
		ЭлементДерева = ТекущийЭлементДерева.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(ЭлементДерева, СтрокаПроекта);
		Если ЭлементДерева.Задача = ТекущаяЗадача Тогда
			ТекущийИдентификатор = ЭлементДерева.ПолучитьИдентификатор();
		КонецЕсли;
		мУровень = СформироватьДеревоЭкземпляраРекурсивно(ТаблицаПроекта, СтрокаПроекта.Задача, ЭлементДерева, ТекущийУровень + 1);
		Если мУровень > МаксимальныйУровень Тогда
			МаксимальныйУровень = мУровень;
		КонецЕсли;
	КонецЦикла;
	Возврат МаксимальныйУровень;
КонецФункции

&НаСервере
Процедура ПоказатьКнопкиКоличестваУровней(МаксимальныйУровень)
	Для К = 1 По МаксимальныйУровень Цикл
		ИмяКнопки = "КнопкаПоказатьУровень" + Формат(К, "ЧГ=;ЧН=");
		КнопкаУровня = Элементы.Найти(ИмяКнопки);
		Если КнопкаУровня = Неопределено Тогда
			КнопкаУровня = Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), Элементы.ГруппаКнопкиУровней);
			КнопкаУровня.Заголовок = К;
			КнопкаУровня.Отображение = ОтображениеКнопки.Текст;
			КнопкаУровня.ИмяКоманды = "КомандаПоказатьУровень";
			КнопкаУровня.Видимость = Истина;
		КонецЕсли; 
	КонецЦикла;
	
	К = МаксимальныйУровень + 1;
	Пока Элементы.Найти("КнопкаПоказатьУровень" + Формат(К, "ЧГ=;ЧН=")) <> Неопределено Цикл
		Элементы.Найти("КнопкаПоказатьУровень" + Формат(К, "ЧГ=;ЧН=")).Видимость = Ложь;
		К = К + 1;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоЭкземпляровВерсийНаСервере()
	ЗапросДерева = Новый Запрос;
	ЗапросДерева.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	грзнтЭкземплярыВерсийПланаПроекта.ВидВерсии КАК ВидВерсии,
	|	грзнтЭкземплярыВерсийПланаПроекта.Наименование,
	|	грзнтЭкземплярыВерсийПланаПроекта.Комментарий,
	|	грзнтЭкземплярыВерсийПланаПроекта.Ссылка
	|ИЗ
	|	Справочник.грзнтЭкземплярыВерсийПланаПроекта КАК грзнтЭкземплярыВерсийПланаПроекта
	|ГДЕ
	|	грзнтЭкземплярыВерсийПланаПроекта.Владелец = &Проект
	|ИТОГИ ПО
	|	ВидВерсии";
	ЗапросДерева.УстановитьПараметр("Проект", ЗадачаПроектаПроект);
	ВыборкаВидВерсии = ЗапросДерева.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидВерсии");
	ДеревоЭкземпляров.ПолучитьЭлементы().Очистить();
	Пока ВыборкаВидВерсии.Следующий() Цикл
		ЭлементВидВерсии = ДеревоЭкземпляров.ПолучитьЭлементы().Добавить();
		ЭлементВидВерсии.ЭкземплярПредставление = ВыборкаВидВерсии.ВидВерсии;
		ВыборкаЭкземпляры = ВыборкаВидВерсии.Выбрать();
		Пока ВыборкаЭкземпляры.Следующий() Цикл
			ЭлементЭкземпляр = ЭлементВидВерсии.ПолучитьЭлементы().Добавить();
			ЭлементЭкземпляр.ЭкземплярПредставление = ВыборкаЭкземпляры.Наименование;
			ЭлементЭкземпляр.ЭкземплярВерсии = ВыборкаЭкземпляры.Ссылка;
			ЭлементЭкземпляр.Комментарий = ВыборкаЭкземпляры.Комментарий;
			ЭлементЭкземпляр.Картинка = 2;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьУровеньДерева(УзелДерева, Уровень, ТекущийУровень)
	Для Каждого ЭлементДерева ИЗ УзелДерева.ПолучитьЭлементы() Цикл
		Если Уровень <= ТекущийУровень Тогда
			Если Элементы.ДеревоПроекта.Развернут(ЭлементДерева.ПолучитьИдентификатор()) Тогда
				ПоказатьУровеньДерева(ЭлементДерева, Уровень, ТекущийУровень +1);
				Элементы.ДеревоПроекта.Свернуть(ЭлементДерева.ПолучитьИдентификатор());
			КонецЕсли;
		Иначе
			Если НЕ Элементы.ДеревоПроекта.Развернут(ЭлементДерева.ПолучитьИдентификатор()) Тогда
				Элементы.ДеревоПроекта.Развернуть(ЭлементДерева.ПолучитьИдентификатор());
			КонецЕсли;
			ПоказатьУровеньДерева(ЭлементДерева, Уровень, ТекущийУровень + 1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитОбъекта(Объект, ИмяРеквизита)
	Возврат Объект[ИмяРеквизита];
КонецФункции

#КонецОбласти

