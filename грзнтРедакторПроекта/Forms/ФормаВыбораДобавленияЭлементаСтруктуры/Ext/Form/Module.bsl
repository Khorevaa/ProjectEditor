
#Область ФормаИСобытия

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Свойство("Справочник") Тогда
		Возврат;
	КонецЕсли;
	СправочникВыбора = Параметры.Справочник;
	Если СправочникВыбора = "грзнтПродукты" Тогда
		СправочникЭлементы = "грзнтВидыЭлементовПродукта";
	ИначеЕсли СправочникВыбора = "грзнтТехнологическиеПроцессы" Тогда
		СправочникЭлементы = "грзнтВидыЭлементовТехнологическихПроцессов";
	ИначеЕсли СправочникВыбора = "грзнтУправленческиеРаботы" Тогда
		СправочникЭлементы = "грзнтВидыЭлементовУправленческихРабот";
	ИначеЕсли СправочникВыбора = "грзнтЮридическиеДоговоры" Тогда
		СправочникЭлементы = "грзнтВидыЭлементовЮридическихДоговоров";
	КонецЕсли;
	СписокВыбора.ТекстЗапроса = СтрЗаменить(СписокВыбора.ТекстЗапроса, "грзнтПродукты", СправочникВыбора);
	СписокВыбора.ТекстЗапроса = СтрЗаменить(СписокВыбора.ТекстЗапроса, "грзнтВидыЭлементовПродукта", СправочникЭлементы);
	СписокВыбора.ОсновнаяТаблица = "Справочник." + СправочникВыбора;
	УстановитьВидимостьПереключателей();
	
	Параметры.Свойство("НаименованиеЗадачи", ЗадачаПроектаНаименование);
	Параметры.Свойство("УИД", ЗадачаПроектаУИД);
	Параметры.Свойство("КодСДР", ЗадачаПроектаКодСДР);
	Параметры.Свойство("НомерСтрокиПроекта", ЗадачаПроектаНомерСтрокиПроекта);
	Параметры.Свойство("Проект", ЗадачаПроектаПроект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ВыборЗадачиПомещения" И ТипЗнч(Источник) = Тип("УправляемаяФорма") И Источник.ВладелецФормы = ЭтаФорма Тогда 
		СтандартнаяОбработка = Ложь;
		ЗадачаПроектаНаименованиеОбработкаВыбора(Элементы.ЗадачаПроектаНаименование, Параметр, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроектаНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗакрыватьПриЗакрытииОкнаВладельца", Истина);
	СтруктураПараметров.Вставить("ТекущийУИД", ЗадачаПроектаУИД);
	СтруктураПараметров.Вставить("ПредшественникУИД", ЗадачаПроектаУИД);
	СтруктураПараметров.Вставить("Проект", ЗадачаПроектаПроект);
	СтруктураПараметров.Вставить("ИмяФормыРедактирования", ВладелецФормы.ПолучитьИмяОбъектаНаКлиенте() + ".Форма.ФормаВыбораЗадачи");
	СтруктураПараметров.Вставить("ОперацияВыбора", "ВыборЗадачиПомещения");
	ОткрытьФорму(СтруктураПараметров.ИмяФормыРедактирования, СтруктураПараметров, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроектаНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	ЗадачаПроектаКодСДР = "";
	ЗадачаПроектаНаименование = "";
	ЗадачаПроектаНомерСтрокиПроекта = 0;
	ЗадачаПроектаУИД = "";
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПроектаНаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ЗадачаПроектаУИД = "";
	ЗадачаПроектаНомерСтрокиПроекта = 0;
	ЗадачаПроектаКодСДР = "";
	Если НЕ ПустаяСтрока(ВыбранноеЗначение) Тогда
		ЗадачаПроектаНаименование = "";
		ЗадачаПроектаУИД = ВыбранноеЗначение;
		
		СтрокаТаблицы = ВладелецФормы.тСоответствиеТаблицыУИД.Получить(ЗадачаПроектаУИД);
		Если СтрокаТаблицы <> Неопределено Тогда
			ВыбранноеЗначение = СтрокаТаблицы.НаименованиеЗадачи;
			ЗадачаПроектаНомерСтрокиПроекта = СтрокаТаблицы.НомерСтрокиПроекта;
			ЗадачаПроектаКодСДР = СтрокаТаблицы.КодСДР;
		КонецЕсли;
	КонецЕсли;
	ЗадачаПроектаНаименование = ВыбранноеЗначение;
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	КомандаВыбрать(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	ТекущаяСтрока = Элементы.СписокВыбора.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Элемент", ТекущаяСтрока);
	СтруктураВыбора.Вставить("УИД", ЗадачаПроектаУИД);
	//СтруктураВыбора.Вставить("Проект", Проект);
	//СтруктураВыбора.Вставить("ЭкземплярВерсии", ЭкземплярВерсии);
	
	СтруктураВыбора.Вставить("ПереноситьВЭкземпляры", ПереноситьВЭкземпляры);
	СтруктураВыбора.Вставить("ПереноситьДДС", ПереноситьПланДДС);
	СтруктураВыбора.Вставить("ПереноситьДоходы", ПереноситьПланДоходов);
	СтруктураВыбора.Вставить("ПереноситьЗадачаВместеСПодчиненными", ПереноситьИерархию);
	//СтруктураВыбора.Вставить("ПереноситьМатериалы", ПереноситьМатериалы);
	СтруктураВыбора.Вставить("ПереноситьРасходы", ПереноситьПланРасходов);
	СтруктураВыбора.Вставить("ПереноситьСрокиИДлительность", ПереноситьДлительность);
	//СтруктураВыбора.Вставить("ПереноситьТрудозатратыПоРесурсам", ПереноситьТрудозатратыПоРесурсам);
	СтруктураВыбора.Вставить("ПереноситьТрудозатратыПоРолям", ПереноситьПланРолей);
	//СтруктураВыбора.Вставить("ПереноситьКомментарии", ПереноситьКомментарии);
	СтруктураВыбора.Вставить("ПереноситьСвязи", ПереноситьСвязи);
	СтруктураВыбора.Вставить("Справочник", СправочникВыбора);
	
	МассивЭкземпляров = Новый Массив;
	//Для Каждого ЭлементВидВерсии ИЗ ДеревоЭкземпляров.ПолучитьЭлементы() Цикл
	//	Для Каждого ЭлементЭкземпляр ИЗ ЭлементВидВерсии.ПолучитьЭлементы() Цикл
	//		Если ЭлементЭкземпляр.Пометка Тогда
	//			МассивЭкземпляров.Добавить(ЭлементЭкземпляр.ЭкземплярВерсии);
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЦикла;
	СтруктураВыбора.Вставить("МассивЭкземпляров", МассивЭкземпляров);
	
	Оповестить("ВыборЭлементаСтруктурыДляДобавления", СтруктураВыбора, ЭтаФорма);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновить(Команда)
	Элементы.СписокВыбора.Обновить();
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункции

&НаСервере
Функция УстановитьВидимостьПереключателей()
	Если СправочникВыбора = "грзнтПродукты" Тогда
		Элементы.ПереноситьИерархию.Видимость = Истина;
		Элементы.ПереноситьДлительность.Видимость = Ложь;
		Элементы.ПереноситьСвязи.Видимость = Ложь;
		Элементы.ПереноситьПланРолей.Видимость = Ложь;
		Элементы.ПереноситьПланДДС.Видимость = Ложь;
		Элементы.ПереноситьПланДоходов.Видимость = Ложь;
		Элементы.ПереноситьПланРасходов.Видимость = Ложь;
	ИначеЕсли СправочникВыбора = "грзнтТехнологическиеПроцессы" Тогда
		Элементы.ПереноситьИерархию.Видимость = Истина;
		Элементы.ПереноситьДлительность.Видимость = Истина;
		Элементы.ПереноситьСвязи.Видимость = Истина;
		Элементы.ПереноситьПланРолей.Видимость = Истина;
		Элементы.ПереноситьПланДДС.Видимость = Ложь;
		Элементы.ПереноситьПланДоходов.Видимость = Ложь;
		Элементы.ПереноситьПланРасходов.Видимость = Ложь;
	ИначеЕсли СправочникВыбора = "грзнтУправленческиеРаботы" Тогда
		Элементы.ПереноситьИерархию.Видимость = Истина;
		Элементы.ПереноситьДлительность.Видимость = Истина;
		Элементы.ПереноситьСвязи.Видимость = Истина;
		Элементы.ПереноситьПланРолей.Видимость = Истина;
		Элементы.ПереноситьПланДДС.Видимость = Ложь;
		Элементы.ПереноситьПланДоходов.Видимость = Ложь;
		Элементы.ПереноситьПланРасходов.Видимость = Ложь;
	ИначеЕсли СправочникВыбора = "грзнтЮридическиеДоговоры" Тогда
		Элементы.ПереноситьИерархию.Видимость = Истина;
		Элементы.ПереноситьДлительность.Видимость = Ложь;
		Элементы.ПереноситьСвязи.Видимость = Ложь;
		Элементы.ПереноситьПланРолей.Видимость = Ложь;
		Элементы.ПереноситьПланДДС.Видимость = Истина;
		Элементы.ПереноситьПланДоходов.Видимость = Истина;
		Элементы.ПереноситьПланРасходов.Видимость = Истина;
	КонецЕсли;
КонецФункции

#КонецОбласти
